/**
 * Класс, который декодирует таблицу Хаффмана
*/

class HuffmanTable {
    field Array elements, lengths;

    constructor HuffmanTable new(){
        return this;
    }

    method void GetHuffmanBits(Array lengthss, Array elementss){
        let lengths = lengthss;
        let elements = elementss;
        return;
    }

    method int GetCode(Stream st){
        var int len, code, first, count, index;
        let code = 0;
        let first = 0;
        let index = 0;
        let len = 0;
        while(len < 16){
            let code = code | st.GetBit();
            let count = lengths[len];
            if ((code - count) < first){
                do Output.printInt(elements[index + (code - first)]);
                return elements[index + (code - first)];
            }
            let index = index + count;
            let first = first + count;
            let first = first * 2; // first = first << 1
            let code = code * 2; // code = code << 1
            let len = len + 1;
        }
        return -1;
    }
}